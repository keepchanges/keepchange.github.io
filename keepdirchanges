#!/usr/bin/env bash

# This script follow directory changes since last execution.
# It uses rsync program. See 3 main line below.
# For use it see script keepchanges.

# The directory tree will be next:
ROOT_DIR=/root/keepchanges
SRC_DIR=""	# Relative path.
WORK_DIR=""	# Relative path.
# ${SRC_DIR} - original directory must be set through parameter '-s'. Relative path.
# ${WORK_DIR} - storage directory must be set through parameter '-d'. Can't be 'orig'. Relative path.
# ROOT_DIR/orig/${SRC_DIR} - backup copy of original directories. Absolute path.
# ROOT_DIR/${WORK_DIR}${SRC_DIR} -
# directories for keep changes in ${SRC_DIR} since the last script execution. Absolute path.
# ROOT_DIR/${WORK_DIR}/${SRC_DIR}/filename.changes - delta changes for file 'filename'.
# ROOT_DIR/Changelog - common changelog for all changes.
# TMP_DIR - temporary working directory.
# TMP_DIR - created and removed every script execution.

RSYNC_EXE=/usr/bin/rsync

while getopts d:s: opt; do
  case $opt in
  d) WORK_DIR="$OPTARG" ;;
  s) SRC_DIR=$OPTARG ;;
  \?) exit 1 ;;
  esac
done

if [ -z "$WORK_DIR" ]; then echo "Error. No keep dir."; exit 1; fi
if [ "$WORK_DIR" = "orig" ]; then echo "Error. Wrong keep dir name. Shouldn't be 'orig'."; exit 1; fi
if [ -z "$SRC_DIR" ]; then echo "Error. No source dir."; exit 1; fi

KEEP_DIR=$ROOT_DIR/"${WORK_DIR}${SRC_DIR}"
ARCH_DIR=$ROOT_DIR/orig"$SRC_DIR"
TMP_DIR=$(mktemp -d --tmpdir confXXXX)

function keep_changes {
  local fpath="$1"
  mkdir -p $(dirname "$KEEP_DIR/${fpath}")
  cd $TMP_DIR
  diff -uN --no-dereference "old/$fpath" "new/$fpath" > $TMP_DIR/changes
  touch "$KEEP_DIR/${fpath}.changes"
  cat "$KEEP_DIR/${fpath}.changes" >> $TMP_DIR/changes
  /usr/bin/mv -fT $TMP_DIR/changes "$KEEP_DIR/${fpath}.changes"
}

if [ ! -d $ARCH_DIR ]
then
  mkdir -p $ARCH_DIR
  $RSYNC_EXE -rclpgo $SRC_DIR/ $ARCH_DIR
fi

mkdir -p $TMP_DIR/old

# Three main lines. Trailing '/' very important. See man rsync.
$RSYNC_EXE -rmclpgo --compare-dest="$ARCH_DIR" "$SRC_DIR/" $TMP_DIR/new_with_dir
$RSYNC_EXE -rmclpgo $TMP_DIR/new_with_dir/ $TMP_DIR/new  #For skip empty directory
$RSYNC_EXE -rclpgob --backup-dir=$TMP_DIR/old --del "$SRC_DIR/" "$ARCH_DIR"

cd $TMP_DIR
diff -qrN --no-dereference "old" "new" | tee $TMP_DIR/Changelog
if [ -s $TMP_DIR/Changelog ]
then
  echo $(date --rfc-3339=ns) "      " "${WORK_DIR}$SRC_DIR" > $TMP_DIR/Changelog_new
  cat  $TMP_DIR/Changelog >> $TMP_DIR/Changelog_new
  echo '************************************************' >> $TMP_DIR/Changelog_new
  touch "$ROOT_DIR/Changelog"
  cat "$ROOT_DIR/Changelog" >> $TMP_DIR/Changelog_new
  /usr/bin/mv -fT $TMP_DIR/Changelog_new "$ROOT_DIR/Changelog"
fi

cd $TMP_DIR/new
find -type f -or -type l |
  while read fpath
  do
    keep_changes "$fpath"
    /usr/bin/mv -fT "$TMP_DIR/new/$fpath" "$KEEP_DIR/$fpath"
    /usr/bin/rm -f "$TMP_DIR/old/$fpath"
  done
#find

cd $TMP_DIR/old
find -type f -or -type l |
  while read fpath
  do
    keep_changes "$fpath"
    /usr/bin/rm -f "$KEEP_DIR/$fpath"
  done
#find

rm -rf $TMP_DIR
